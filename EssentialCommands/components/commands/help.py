# Auto generated by LangBot Plugin SDK.
# Please refer to https://docs.langbot.app/en/plugin/dev/tutor.html for more details.
from __future__ import annotations

from typing import AsyncGenerator

from langbot_plugin.api.definition.components.command.command import Command, Subcommand
from langbot_plugin.api.entities.builtin.command.context import ExecuteContext, CommandReturn


class Help(Command):
    
    async def initialize(self):
        await super().initialize()
        
        @self.subcommand(
            name="",
            help="Show the help of a command",
            usage="help <command>",
        )
        async def _(self: Help, context: ExecuteContext) -> AsyncGenerator[CommandReturn, None]:
            print(context)
            
            assume_command_prefix = context.full_command_text[0]
            
            language = 'en_US'

            help_message = """
LangBot - Easy-to-use global IM bot platform designed for LLM era

- https://langbot.app

Type `{command_prefix}cmd` for command usage.
            """.strip()

            yield CommandReturn(
                text=help_message.format(command_prefix=assume_command_prefix)
            )