# Auto generated by LangBot Plugin SDK.
# Please refer to https://docs.langbot.app/en/plugin/dev/tutor.html for more details.
from __future__ import annotations

import json

from typing import Any, AsyncGenerator

from langbot_plugin.api.definition.components.command.command import Command, Subcommand
from langbot_plugin.api.entities.builtin.command.context import ExecuteContext, CommandReturn


class Cmd(Command):
    
    async def initialize(self):
        await super().initialize()
        
        @self.subcommand(
            name="",
            help="Show all registered command",
            usage="cmd",
        )
        async def send(self: Cmd, context: ExecuteContext) -> AsyncGenerator[CommandReturn, None]:
            print(context)

            assume_command_prefix = context.full_command_text[0]

            language = 'en_US'

            output_template = """
Available Commands:

{command_list}
Type {command_prefix}cmd <command> for more detailed manual.
            """.strip()

            commands = await self.plugin.list_commands()

            command_list_str = ''

            for command in commands:
                command_manifest = command['manifest']
                command_list_str += f"{assume_command_prefix}{command_manifest['metadata']['name']} - {command_manifest['metadata']['description'][language]}\n"

            yield CommandReturn(
                text=output_template.format(command_list=command_list_str, command_prefix=assume_command_prefix)
            )