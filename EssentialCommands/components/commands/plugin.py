# Auto generated by LangBot Plugin SDK.
# Please refer to https://docs.langbot.app/en/plugin/dev/tutor.html for more details.
from __future__ import annotations

from typing import Any, AsyncGenerator

from langbot_plugin.api.definition.components.command.command import Command, Subcommand
from langbot_plugin.api.entities.builtin.command.context import ExecuteContext, CommandReturn


class Plugin(Command):
    
    async def initialize(self):
        await super().initialize()
        
        @self.subcommand(
            name="",
            help="List all loaded plugins",
            usage="plugin",
        )
        async def _(self: Plugin, context: ExecuteContext) -> AsyncGenerator[CommandReturn, None]:
            language = 'en_US'

            output_template = """
Loaded Plugins:

{plugin_list}
            """.strip()

            plugins = await self.plugin.list_plugins_manifest()

            plugin_list_str = ''

            for plugin in plugins:
                plugin_manifest = plugin['manifest']
                plugin_list_str += f"{plugin_manifest['metadata']['name']} - {plugin_manifest['metadata']['description'][language]}\n\n"

            yield CommandReturn(
                text=output_template.format(plugin_list=plugin_list_str)
            )